{:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39088 0x6ab8742e "clojure.spec.alpha$spec_impl$reify__39088@6ab8742e"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39088 0x6ab8742e "clojure.spec.alpha$spec_impl$reify__39088@6ab8742e"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :post {:type {:kind :root, :type :Post}, :args {:url {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :url}, :title {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :title}, :description {:type {:kind :root, :type :String}, :arg-name :description}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :post, :qualified-field-name :MutationRoot/post, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :comment {:type {:kind :root, :type :Comment}, :args {:description {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :description}, :posted_to {:type {:kind :non-null, :type {:kind :root, :type :Int}}, :arg-name :posted_to}, :replied_to {:type {:kind :non-null, :type {:kind :root, :type :Int}}, :arg-name :replied_to}, :commented_by {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :commented_by}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :comment, :qualified-field-name :MutationRoot/comment, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39088 0x316de718 "clojure.spec.alpha$spec_impl$reify__39088@316de718"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39088 0xf0f4a1e "clojure.spec.alpha$spec_impl$reify__39088@f0f4a1e"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:email {:type {:kind :root, :type :String}, :field-name :email, :qualified-field-name :User/email, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :admin {:type {:kind :root, :type :Boolean}, :field-name :admin, :qualified-field-name :User/admin, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :pass {:type {:kind :root, :type :String}, :field-name :pass, :qualified-field-name :User/pass, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39088 0x1e3af71d "clojure.spec.alpha$spec_impl$reify__39088@1e3af71d"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39088 0x1e3af71d "clojure.spec.alpha$spec_impl$reify__39088@1e3af71d"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39088 0x6b10017e "clojure.spec.alpha$spec_impl$reify__39088@6b10017e"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39088 0x6a5ebcf9 "clojure.spec.alpha$spec_impl$reify__39088@6a5ebcf9"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40358]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40327], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40354]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40345]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39088 0x6ab8742e "clojure.spec.alpha$spec_impl$reify__39088@6ab8742e"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39088 0x6ab8742e "clojure.spec.alpha$spec_impl$reify__39088@6ab8742e"], :category :scalar, :type-name :String}}