	{:cache #atom[{} 0x350f34eb], :com.walmartlabs.lacinia.constants
	{:/parsed-query {:fragments {}, :selections
	{:[{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::selections ({:com.walmartlabs.lacinia.parser/arguments-
	{:extractor nil, :arguments nil, :reportable-arguments nil, :field
	{::id, :selection-type :field, :alias :id, :leaf? true, :query-
	{:path [:top_posts :id], :concrete-type? true, :field-definition
	{:{:type {:kind :root, :type :String}, :field-name :id,
	{::qualified-field-name :Post/id, :args nil, :type-name :Post,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :created, :selection-type :field, :alias :created,
	{::leaf? true, :query-path [:top_posts :created], :concrete-type?
	{:true, :field-definition {:type {:kind :root, :type :String},
	{::field-name :created, :qualified-field-name :Post/created, :args
	{:nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :changed, :selection-type :field, :alias :changed,
	{::leaf? true, :query-path [:top_posts :changed], :concrete-type?
	{:true, :field-definition {:type {:kind :root, :type :String},
	{::field-name :changed, :qualified-field-name :Post/changed, :args
	{:nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :title, :selection-type :field, :alias :title,
	{::leaf? true, :query-path [:top_posts :title], :concrete-type?
	{:true, :field-definition {:type {:kind :root, :type :String},
	{::field-name :title, :qualified-field-name :Post/title, :args
	{:nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :description, :selection-type :field, :alias
	{::description, :leaf? true, :query-path [:top_posts
	{::description], :concrete-type? true, :field-definition {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Post/description, :args nil, :type-name
	{::Post, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :url, :selection-type :field, :alias :url, :leaf?
	{:true, :query-path [:top_posts :url], :concrete-type? true,
	{::field-definition {:type {:kind :root, :type :String}, :field-
	{:name :url, :qualified-field-name :Post/url, :args nil, :type-
	{:name :Post, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :location {:line
	{:1, :column 10}, :directives nil}
	{:{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::arguments nil, :reportable-arguments nil, :field :posted_by,
	{::selection-type :field, :alias :posted_by, :leaf? true, :query-
	{:path [:top_posts :posted_by], :concrete-type? true, :field-
	{:definition {:type {:kind :root, :type :String}, :field-name
	{::posted_by, :qualified-field-name :Post/posted_by, :args nil,
	{::type-name :Post, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :location {:line
	{:1, :column 10}, :directives nil}
	{:{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::arguments nil, :reportable-arguments nil, :field :posted_in,
	{::selection-type :field, :alias :posted_in, :leaf? true, :query-
	{:path [:top_posts :posted_in], :concrete-type? true, :field-
	{:definition {:type {:kind :root, :type :String}, :field-name
	{::posted_in, :qualified-field-name :Post/posted_in, :args nil,
	{::type-name :Post, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :location {:line
	{:1, :column 10}, :directives nil}
	{:{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::arguments nil, :reportable-arguments nil, :field :votes,
	{::selection-type :field, :alias :votes, :leaf? true, :query-path
	{:[:top_posts :votes], :concrete-type? true, :field-definition
	{:{:type {:kind :root, :type :String}, :field-name :votes,
	{::qualified-field-name :Post/votes, :args nil, :type-name :Post,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil}), :arguments nil, :reportable-
	{:arguments nil, :field :top_posts, :selection-type :field, :alias
	{::top_posts, :leaf? false, :query-path [:top_posts], :concrete-
	{:type? true, :field-definition {:type {:kind :list, :type {:kind
	{::root, :type :Post}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :top_posts,
	{::qualified-field-name :QueryRoot/top_posts, :args nil, :type-
	{:name :QueryRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-list--40365]}, :location {:line 1, :column 0},
	{::directives nil}], :operation-type :query,
	{::com.walmartlabs.lacinia.constants/schema {:ID {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"], :category
	{::scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind
	{::root, :type :String}, :field-name :id, :qualified-field-name
	{::Group/id, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Group/description, :args nil, :type-name
	{::Group, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :Group/created, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Group/changed, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created_by {:type {:kind
	{::root, :type :User}, :field-name :created_by, :qualified-field-
	{:name :Group/created_by, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Group, :implements #{}}, :Post {:implements
	{:#{:thread}, :fields {:posted_in {:type {:kind :root, :type
	{::String}, :field-name :posted_in, :qualified-field-name
	{::Post/posted_in, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Post/description, :args nil, :type-name
	{::Post, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :votes {:type {:kind
	{::root, :type :String}, :field-name :votes, :qualified-field-name
	{::Post/votes, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :Post/created, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :title {:type {:kind
	{::root, :type :String}, :field-name :title, :qualified-field-name
	{::Post/title, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :id {:type {:kind :root,
	{::type :String}, :field-name :id, :qualified-field-name :Post/id,
	{::args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Post/changed, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :url {:type {:kind :root,
	{::type :String}, :field-name :url, :qualified-field-name
	{::Post/url, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :posted_by {:type {:kind
	{::root, :type :String}, :field-name :posted_by, :qualified-field-
	{:name :Post/posted_by, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Post}, :Privilege {:fields {:id {:type {:kind :root,
	{::type :String}, :field-name :id, :qualified-field-name
	{::Privilege/id, :args nil, :type-name :Privilege, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :first_name {:type {:kind
	{::root, :type :String}, :field-name :first_name, :qualified-
	{:field-name :Privilege/first_name, :args nil, :type-name
	{::Privilege, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :last_name {:type
	{:{:kind :root, :type :String}, :field-name :last_name,
	{::qualified-field-name :Privilege/last_name, :args nil, :type-
	{:name :Privilege, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :is_active {:type
	{:{:kind :root, :type :Boolean}, :field-name :is_active,
	{::qualified-field-name :Privilege/is_active, :args nil, :type-
	{:name :Privilege, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :created {:type
	{:{:kind :root, :type :String}, :field-name :created, :qualified-
	{:field-name :Privilege/created, :args nil, :type-name :Privilege,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Privilege/changed, :args nil, :type-name :Privilege,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Privilege, :implements #{}}, :MutationRoot
	{:{:category :object, :type-name :MutationRoot, :description "Root
	{:of all mutations.", :fields {:createuser {:type {:kind :root,
	{::type :User}, :args {:id {:type {:kind :non-null, :type {:kind
	{::root, :type :String}}, :arg-name :id}, :email {:type {:kind
	{::non-null, :type {:kind :root, :type :String}}, :arg-name
	{::email}, :first_name {:type {:kind :non-null, :type {:kind
	{::root, :type :String}}, :arg-name :first_name}, :last_name
	{:{:type {:kind :non-null, :type {:kind :root, :type :String}},
	{::arg-name :last_name}, :pass {:type {:kind :non-null, :type
	{:{:kind :root, :type :String}}, :arg-name :pass}, :admin {:type
	{:{:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-
	{:name :admin}, :is_active {:type {:kind :non-null, :type {:kind
	{::root, :type :Boolean}}, :arg-name :is_active}, :created {:type
	{:{:kind :non-null, :type {:kind :root, :type :String}}, :arg-name
	{::created}}, :resolve #function[com.walmartlabs.lacinia.schema
	{:/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name
	{::createuser, :qualified-field-name :MutationRoot/createuser,
	{::type-name :MutationRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :removeuser {:type {:kind
	{::root, :type :User}, :args {:id {:type {:kind :non-null, :type
	{:{:kind :root, :type :String}}, :arg-name :id}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :removeuser,
	{::qualified-field-name :MutationRoot/removeuser, :type-name
	{::MutationRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :updateuser {:type {:kind
	{::root, :type :User}, :args {:email {:type {:kind :non-null,
	{::type {:kind :root, :type :String}}, :arg-name :email},
	{::first_name {:type {:kind :non-null, :type {:kind :root, :type
	{::String}}, :arg-name :first_name}, :last_name {:type {:kind
	{::non-null, :type {:kind :root, :type :String}}, :arg-name
	{::last_name}, :pass {:type {:kind :non-null, :type {:kind :root,
	{::type :String}}, :arg-name :pass}, :admin {:type {:kind :non-
	{:null, :type {:kind :root, :type :Boolean}}, :arg-name :admin},
	{::is_active {:type {:kind :non-null, :type {:kind :root, :type
	{::Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-
	{:null, :type {:kind :root, :type :String}}, :arg-name :changed}},
	{::resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-
	{:to-ensure-resolver-result/fn--40334], :field-name :updateuser,
	{::qualified-field-name :MutationRoot/updateuser, :type-name
	{::MutationRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :implements #{}},
	{::Comment {:implements #{:thread}, :fields {:id {:type {:kind
	{::root, :type :String}, :field-name :id, :qualified-field-name
	{::Comment/id, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :Comment/created, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Comment/changed, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Comment/description, :args nil, :type-
	{:name :Comment, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :posted_to {:type
	{:{:kind :root, :type :Post}, :field-name :posted_to, :qualified-
	{:field-name :Comment/posted_to, :args nil, :type-name :Comment,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :replied_to {:type {:kind
	{::root, :type :Comment}, :field-name :replied_to, :qualified-
	{:field-name :Comment/replied_to, :args nil, :type-name :Comment,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :votes {:type {:kind
	{::root, :type :String}, :field-name :votes, :qualified-field-name
	{::Comment/votes, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :commented_by {:type
	{:{:kind :root, :type :User}, :field-name :commented_by,
	{::qualified-field-name :Comment/commented_by, :args nil, :type-
	{:name :Comment, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}}, :category
	{::object, :type-name :Comment}, :SubscriptionRoot {:category
	{::object, :type-name :SubscriptionRoot, :description "Root of all
	{:subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x45ef6fd2
	{:"clojure.spec.alpha$spec_impl$reify__39095@45ef6fd2"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x5b5c9cb6
	{:"clojure.spec.alpha$spec_impl$reify__39095@5b5c9cb6"], :category
	{::scalar, :type-name :Boolean}, :__Field {:fields {:name {:type
	{:{:kind :non-null, :type {:kind :root, :type :String}}, :field-
	{:name :name, :qualified-field-name :__Field/name, :args nil,
	{::type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__Field/description, :args nil, :type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :args {:type {:kind :non-
	{:null, :type {:kind :list, :type {:kind :root, :type
	{::__InputValue}}}, :field-name :args, :qualified-field-name
	{::__Field/args, :args nil, :type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :type {:type {:kind :non-null, :type
	{:{:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :type,
	{::qualified-field-name :__Field/type, :args nil, :type-name
	{::__Field, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-non-null--40361]}, :isDeprecated
	{:{:type {:kind :non-null, :type {:kind :root, :type :Boolean}},
	{::field-name :isDeprecated, :qualified-field-name
	{::__Field/isDeprecated, :args nil, :type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :deprecationReason {:type {:kind
	{::root, :type :String}, :field-name :deprecationReason,
	{::qualified-field-name :__Field/deprecationReason, :args nil,
	{::type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :__Field, :implements #{}}, :__Type {:fields
	{:{:description {:type {:kind :root, :type :String}, :field-name
	{::description, :qualified-field-name :__Type/description, :args
	{:nil, :type-name :__Type, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :interfaces {:type {:kind
	{::list, :type {:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :interfaces,
	{::qualified-field-name :__Type/interfaces, :args nil, :type-name
	{::__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :ofType {:type {:kind
	{::root, :type :__Type}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :ofType,
	{::qualified-field-name :__Type/ofType, :args nil, :type-name
	{::__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/create-root-selector/select-require-single-value--40352]},
	{::name {:type {:kind :root, :type :String}, :field-name :name,
	{::qualified-field-name :__Type/name, :args nil, :type-name
	{::__Type, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :fields {:type {:kind
	{::list, :type {:kind :root, :type :__Field}}, :args
	{:{:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-
	{:name :includeDeprecated}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :fields,
	{::qualified-field-name :__Type/fields, :type-name :__Type,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-list--40365]}, :possibleTypes {:type {:kind
	{::list, :type {:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :possibleTypes,
	{::qualified-field-name :__Type/possibleTypes, :args nil, :type-
	{:name :__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :kind {:type {:kind
	{::non-null, :type {:kind :root, :type :__TypeKind}}, :field-name
	{::kind, :qualified-field-name :__Type/kind, :args nil, :type-name
	{::__Type, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :enumValues {:type {:kind :list,
	{::type {:kind :root, :type :__EnumValue}}, :args
	{:{:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-
	{:name :includeDeprecated}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :enumValues,
	{::qualified-field-name :__Type/enumValues, :type-name :__Type,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-list--40365]}, :inputFields {:type {:kind :list,
	{::type {:kind :root, :type :__InputValue}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :inputFields,
	{::qualified-field-name :__Type/inputFields, :args nil, :type-name
	{::__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}}, :category :object,
	{::type-name :__Type, :implements #{}}, :Subscription {:fields
	{:{:id {:type {:kind :root, :type :String}, :field-name :id,
	{::qualified-field-name :Subscription/id, :args nil, :type-name
	{::Subscription, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :created {:type
	{:{:kind :root, :type :String}, :field-name :created, :qualified-
	{:field-name :Subscription/created, :args nil, :type-name
	{::Subscription, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :subscriber
	{:{:type {:kind :root, :type :User}, :field-name :subscriber,
	{::qualified-field-name :Subscription/subscriber, :args nil,
	{::type-name :Subscription, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :subscribed_to {:type
	{:{:kind :root, :type :Group}, :field-name :subscribed_to,
	{::qualified-field-name :Subscription/subscribed_to, :args nil,
	{::type-name :Subscription, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Subscription, :implements #{}}, :__Directive
	{:{:fields {:name {:type {:kind :non-null, :type {:kind :root,
	{::type :String}}, :field-name :name, :qualified-field-name
	{::__Directive/name, :args nil, :type-name :__Directive, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__Directive/description, :args nil, :type-name :__Directive,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :locations {:type {:kind
	{::non-null, :type {:kind :list, :type {:kind :root, :type
	{::__DirectiveLocation}}}, :field-name :locations, :qualified-
	{:field-name :__Directive/locations, :args nil, :type-name
	{::__Directive, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-non-null--40361]}, :args {:type {:kind :non-
	{:null, :type {:kind :list, :type {:kind :root, :type
	{::__InputValue}}}, :field-name :args, :qualified-field-name
	{::__Directive/args, :args nil, :type-name :__Directive, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}}, :category :object, :type-name
	{::__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR
	{::OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL],
	{::category :enum, :type-name :__TypeKind, :values-set #{:OBJECT
	{::INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}},
	{::User {:fields {:first_name {:type {:kind :root, :type :String},
	{::field-name :first_name, :qualified-field-name :User/first_name,
	{::args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :comments {:type {:kind
	{::list, :type {:kind :root, :type :thread}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :comments,
	{::qualified-field-name :User/comments, :args nil, :type-name
	{::User, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :is_active {:type
	{:{:kind :root, :type :Boolean}, :field-name :is_active,
	{::qualified-field-name :User/is_active, :args nil, :type-name
	{::User, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :User/created, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :subscriptions {:type
	{:{:kind :list, :type {:kind :root, :type :String}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :subscriptions,
	{::qualified-field-name :User/subscriptions, :args nil, :type-name
	{::User, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :status {:type {:kind
	{::root, :type :String}, :field-name :status, :qualified-field-
	{:name :User/status, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :id {:type {:kind :root,
	{::type :String}, :field-name :id, :qualified-field-name :User/id,
	{::args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :User/changed, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :last_name {:type {:kind
	{::root, :type :String}, :field-name :last_name, :qualified-field-
	{:name :User/last_name, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :posts {:type {:kind
	{::list, :type {:kind :root, :type :thread}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :posts,
	{::qualified-field-name :User/posts, :args nil, :type-name :User,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-list--40365]}}, :category :object, :type-name
	{::User, :implements #{}}, :thread {:fields {:id {:type {:kind
	{::root, :type :String}, :field-name :id, :qualified-field-name
	{::thread/id, :args nil, :type-name :thread}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :thread/description, :args nil, :type-name
	{::thread}, :votes {:type {:kind :root, :type :String}, :field-
	{:name :votes, :qualified-field-name :thread/votes, :args nil,
	{::type-name :thread}}, :category :interface, :type-name :thread,
	{::members #{:Post :Comment}}, :Float {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x6ae106b
	{:"clojure.spec.alpha$spec_impl$reify__39095@6ae106b"], :serialize
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x6ae106b
	{:"clojure.spec.alpha$spec_impl$reify__39095@6ae106b"], :category
	{::scalar, :type-name :Float}, :__DirectiveLocation {:values
	{:[:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION
	{::FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name
	{::__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD
	{::QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD
	{::SUBSCRIPTION}}, :Int {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x38816e93
	{:"clojure.spec.alpha$spec_impl$reify__39095@38816e93"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x787fc19 "clojure.spec.alpha$spec_impl$reify__39095@787fc19"],
	{::category :scalar, :type-name :Int}, :__InputValue {:fields
	{:{:name {:type {:kind :non-null, :type {:kind :root, :type
	{::String}}, :field-name :name, :qualified-field-name
	{::__InputValue/name, :args nil, :type-name :__InputValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__InputValue/description, :args nil, :type-name :__InputValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :type {:type {:kind :non-
	{:null, :type {:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :type,
	{::qualified-field-name :__InputValue/type, :args nil, :type-name
	{::__InputValue, :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :defaultValue {:type {:kind :root,
	{::type :String}, :field-name :defaultValue, :qualified-field-name
	{::__InputValue/defaultValue, :args nil, :type-name :__InputValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :__InputValue, :implements #{}}, :__Schema {:fields
	{:{:types {:type {:kind :non-null, :type {:kind :list, :type
	{:{:kind :root, :type :__Type}}}, :field-name :types, :qualified-
	{:field-name :__Schema/types, :args nil, :type-name :__Schema,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :queryType {:type {:kind :non-null,
	{::type {:kind :root, :type :__Type}}, :field-name :queryType,
	{::qualified-field-name :__Schema/queryType, :args nil, :type-name
	{::__Schema, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-non-null--40361]}, :mutationType {:type {:kind
	{::root, :type :__Type}, :field-name :mutationType, :qualified-
	{:field-name :__Schema/mutationType, :args nil, :type-name
	{::__Schema, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :subscriptionType
	{:{:type {:kind :root, :type :__Type}, :field-name
	{::subscriptionType, :qualified-field-name
	{::__Schema/subscriptionType, :args nil, :type-name :__Schema,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :directives {:type {:kind
	{::non-null, :type {:kind :list, :type {:kind :root, :type
	{::__Directive}}}, :field-name :directives, :qualified-field-name
	{::__Schema/directives, :args nil, :type-name :__Schema, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}}, :category :object, :type-name
	{::__Schema, :implements #{}}, :QueryRoot {:category :object,
	{::type-name :QueryRoot, :description "Root of all queries.",
	{::fields {:user {:type {:kind :non-null, :type {:kind :root,
	{::type :User}}, :args {:id {:type {:kind :root, :type :String},
	{::arg-name :id}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :user,
	{::qualified-field-name :QueryRoot/user, :type-name :QueryRoot,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-non-null--40361]}, :top_posts {:type {:kind
	{::list, :type {:kind :root, :type :Post}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :top_posts,
	{::qualified-field-name :QueryRoot/top_posts, :args nil, :type-
	{:name :QueryRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-list--40365]}, :comments {:type {:kind :list, :type
	{:{:kind :root, :type :Comment}}, :args {:id {:type {:kind :root,
	{::type :String}, :arg-name :id}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :comments,
	{::qualified-field-name :QueryRoot/comments, :type-name
	{::QueryRoot, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :__type {:type {:kind
	{::root, :type :__Type}, :args {:name {:type {:kind :root, :type
	{::String}, :arg-name :name}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :__type,
	{::qualified-field-name :QueryRoot/__type, :type-name :QueryRoot,
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :__schema {:type
	{:{:kind :root, :type :__Schema}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :__schema,
	{::qualified-field-name :QueryRoot/__schema, :args nil, :type-name
	{::QueryRoot, :selector #function[com.walmartlabs.lacinia.schema
	{:/create-root-selector/select-require-single-value--40352]}},
	{::implements #{}}, :__EnumValue {:fields {:name {:type {:kind
	{::non-null, :type {:kind :root, :type :String}}, :field-name
	{::name, :qualified-field-name :__EnumValue/name, :args nil,
	{::type-name :__EnumValue, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__EnumValue/description, :args nil, :type-name :__EnumValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :isDeprecated {:type
	{:{:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-
	{:name :isDeprecated, :qualified-field-name
	{::__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :deprecationReason {:type {:kind
	{::root, :type :String}, :field-name :deprecationReason,
	{::qualified-field-name :__EnumValue/deprecationReason, :args nil,
	{::type-name :__EnumValue, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :__EnumValue, :implements #{}}, :String {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"], :category
	{::scalar, :type-name :String}}},
	{::com.walmartlabs.lacinia.constants/schema {:ID {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"], :category
	{::scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind
	{::root, :type :String}, :field-name :id, :qualified-field-name
	{::Group/id, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Group/description, :args nil, :type-name
	{::Group, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :Group/created, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Group/changed, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created_by {:type {:kind
	{::root, :type :User}, :field-name :created_by, :qualified-field-
	{:name :Group/created_by, :args nil, :type-name :Group, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Group, :implements #{}}, :Post {:implements
	{:#{:thread}, :fields {:posted_in {:type {:kind :root, :type
	{::String}, :field-name :posted_in, :qualified-field-name
	{::Post/posted_in, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Post/description, :args nil, :type-name
	{::Post, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :votes {:type {:kind
	{::root, :type :String}, :field-name :votes, :qualified-field-name
	{::Post/votes, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :Post/created, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :title {:type {:kind
	{::root, :type :String}, :field-name :title, :qualified-field-name
	{::Post/title, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :id {:type {:kind :root,
	{::type :String}, :field-name :id, :qualified-field-name :Post/id,
	{::args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Post/changed, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :url {:type {:kind :root,
	{::type :String}, :field-name :url, :qualified-field-name
	{::Post/url, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :posted_by {:type {:kind
	{::root, :type :String}, :field-name :posted_by, :qualified-field-
	{:name :Post/posted_by, :args nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Post}, :Privilege {:fields {:id {:type {:kind :root,
	{::type :String}, :field-name :id, :qualified-field-name
	{::Privilege/id, :args nil, :type-name :Privilege, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :first_name {:type {:kind
	{::root, :type :String}, :field-name :first_name, :qualified-
	{:field-name :Privilege/first_name, :args nil, :type-name
	{::Privilege, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :last_name {:type
	{:{:kind :root, :type :String}, :field-name :last_name,
	{::qualified-field-name :Privilege/last_name, :args nil, :type-
	{:name :Privilege, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :is_active {:type
	{:{:kind :root, :type :Boolean}, :field-name :is_active,
	{::qualified-field-name :Privilege/is_active, :args nil, :type-
	{:name :Privilege, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :created {:type
	{:{:kind :root, :type :String}, :field-name :created, :qualified-
	{:field-name :Privilege/created, :args nil, :type-name :Privilege,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Privilege/changed, :args nil, :type-name :Privilege,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Privilege, :implements #{}}, :MutationRoot
	{:{:category :object, :type-name :MutationRoot, :description "Root
	{:of all mutations.", :fields {:createuser {:type {:kind :root,
	{::type :User}, :args {:id {:type {:kind :non-null, :type {:kind
	{::root, :type :String}}, :arg-name :id}, :email {:type {:kind
	{::non-null, :type {:kind :root, :type :String}}, :arg-name
	{::email}, :first_name {:type {:kind :non-null, :type {:kind
	{::root, :type :String}}, :arg-name :first_name}, :last_name
	{:{:type {:kind :non-null, :type {:kind :root, :type :String}},
	{::arg-name :last_name}, :pass {:type {:kind :non-null, :type
	{:{:kind :root, :type :String}}, :arg-name :pass}, :admin {:type
	{:{:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-
	{:name :admin}, :is_active {:type {:kind :non-null, :type {:kind
	{::root, :type :Boolean}}, :arg-name :is_active}, :created {:type
	{:{:kind :non-null, :type {:kind :root, :type :String}}, :arg-name
	{::created}}, :resolve #function[com.walmartlabs.lacinia.schema
	{:/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name
	{::createuser, :qualified-field-name :MutationRoot/createuser,
	{::type-name :MutationRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :removeuser {:type {:kind
	{::root, :type :User}, :args {:id {:type {:kind :non-null, :type
	{:{:kind :root, :type :String}}, :arg-name :id}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :removeuser,
	{::qualified-field-name :MutationRoot/removeuser, :type-name
	{::MutationRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :updateuser {:type {:kind
	{::root, :type :User}, :args {:email {:type {:kind :non-null,
	{::type {:kind :root, :type :String}}, :arg-name :email},
	{::first_name {:type {:kind :non-null, :type {:kind :root, :type
	{::String}}, :arg-name :first_name}, :last_name {:type {:kind
	{::non-null, :type {:kind :root, :type :String}}, :arg-name
	{::last_name}, :pass {:type {:kind :non-null, :type {:kind :root,
	{::type :String}}, :arg-name :pass}, :admin {:type {:kind :non-
	{:null, :type {:kind :root, :type :Boolean}}, :arg-name :admin},
	{::is_active {:type {:kind :non-null, :type {:kind :root, :type
	{::Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-
	{:null, :type {:kind :root, :type :String}}, :arg-name :changed}},
	{::resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-
	{:to-ensure-resolver-result/fn--40334], :field-name :updateuser,
	{::qualified-field-name :MutationRoot/updateuser, :type-name
	{::MutationRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :implements #{}},
	{::Comment {:implements #{:thread}, :fields {:id {:type {:kind
	{::root, :type :String}, :field-name :id, :qualified-field-name
	{::Comment/id, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :Comment/created, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :Comment/changed, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Comment/description, :args nil, :type-
	{:name :Comment, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :posted_to {:type
	{:{:kind :root, :type :Post}, :field-name :posted_to, :qualified-
	{:field-name :Comment/posted_to, :args nil, :type-name :Comment,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :replied_to {:type {:kind
	{::root, :type :Comment}, :field-name :replied_to, :qualified-
	{:field-name :Comment/replied_to, :args nil, :type-name :Comment,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :votes {:type {:kind
	{::root, :type :String}, :field-name :votes, :qualified-field-name
	{::Comment/votes, :args nil, :type-name :Comment, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :commented_by {:type
	{:{:kind :root, :type :User}, :field-name :commented_by,
	{::qualified-field-name :Comment/commented_by, :args nil, :type-
	{:name :Comment, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}}, :category
	{::object, :type-name :Comment}, :SubscriptionRoot {:category
	{::object, :type-name :SubscriptionRoot, :description "Root of all
	{:subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x45ef6fd2
	{:"clojure.spec.alpha$spec_impl$reify__39095@45ef6fd2"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x5b5c9cb6
	{:"clojure.spec.alpha$spec_impl$reify__39095@5b5c9cb6"], :category
	{::scalar, :type-name :Boolean}, :__Field {:fields {:name {:type
	{:{:kind :non-null, :type {:kind :root, :type :String}}, :field-
	{:name :name, :qualified-field-name :__Field/name, :args nil,
	{::type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__Field/description, :args nil, :type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :args {:type {:kind :non-
	{:null, :type {:kind :list, :type {:kind :root, :type
	{::__InputValue}}}, :field-name :args, :qualified-field-name
	{::__Field/args, :args nil, :type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :type {:type {:kind :non-null, :type
	{:{:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :type,
	{::qualified-field-name :__Field/type, :args nil, :type-name
	{::__Field, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-non-null--40361]}, :isDeprecated
	{:{:type {:kind :non-null, :type {:kind :root, :type :Boolean}},
	{::field-name :isDeprecated, :qualified-field-name
	{::__Field/isDeprecated, :args nil, :type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :deprecationReason {:type {:kind
	{::root, :type :String}, :field-name :deprecationReason,
	{::qualified-field-name :__Field/deprecationReason, :args nil,
	{::type-name :__Field, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :__Field, :implements #{}}, :__Type {:fields
	{:{:description {:type {:kind :root, :type :String}, :field-name
	{::description, :qualified-field-name :__Type/description, :args
	{:nil, :type-name :__Type, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :interfaces {:type {:kind
	{::list, :type {:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :interfaces,
	{::qualified-field-name :__Type/interfaces, :args nil, :type-name
	{::__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :ofType {:type {:kind
	{::root, :type :__Type}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :ofType,
	{::qualified-field-name :__Type/ofType, :args nil, :type-name
	{::__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/create-root-selector/select-require-single-value--40352]},
	{::name {:type {:kind :root, :type :String}, :field-name :name,
	{::qualified-field-name :__Type/name, :args nil, :type-name
	{::__Type, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :fields {:type {:kind
	{::list, :type {:kind :root, :type :__Field}}, :args
	{:{:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-
	{:name :includeDeprecated}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :fields,
	{::qualified-field-name :__Type/fields, :type-name :__Type,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-list--40365]}, :possibleTypes {:type {:kind
	{::list, :type {:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :possibleTypes,
	{::qualified-field-name :__Type/possibleTypes, :args nil, :type-
	{:name :__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :kind {:type {:kind
	{::non-null, :type {:kind :root, :type :__TypeKind}}, :field-name
	{::kind, :qualified-field-name :__Type/kind, :args nil, :type-name
	{::__Type, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :enumValues {:type {:kind :list,
	{::type {:kind :root, :type :__EnumValue}}, :args
	{:{:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-
	{:name :includeDeprecated}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :enumValues,
	{::qualified-field-name :__Type/enumValues, :type-name :__Type,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-list--40365]}, :inputFields {:type {:kind :list,
	{::type {:kind :root, :type :__InputValue}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :inputFields,
	{::qualified-field-name :__Type/inputFields, :args nil, :type-name
	{::__Type, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}}, :category :object,
	{::type-name :__Type, :implements #{}}, :Subscription {:fields
	{:{:id {:type {:kind :root, :type :String}, :field-name :id,
	{::qualified-field-name :Subscription/id, :args nil, :type-name
	{::Subscription, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :created {:type
	{:{:kind :root, :type :String}, :field-name :created, :qualified-
	{:field-name :Subscription/created, :args nil, :type-name
	{::Subscription, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :subscriber
	{:{:type {:kind :root, :type :User}, :field-name :subscriber,
	{::qualified-field-name :Subscription/subscriber, :args nil,
	{::type-name :Subscription, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :subscribed_to {:type
	{:{:kind :root, :type :Group}, :field-name :subscribed_to,
	{::qualified-field-name :Subscription/subscribed_to, :args nil,
	{::type-name :Subscription, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :Subscription, :implements #{}}, :__Directive
	{:{:fields {:name {:type {:kind :non-null, :type {:kind :root,
	{::type :String}}, :field-name :name, :qualified-field-name
	{::__Directive/name, :args nil, :type-name :__Directive, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__Directive/description, :args nil, :type-name :__Directive,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :locations {:type {:kind
	{::non-null, :type {:kind :list, :type {:kind :root, :type
	{::__DirectiveLocation}}}, :field-name :locations, :qualified-
	{:field-name :__Directive/locations, :args nil, :type-name
	{::__Directive, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-non-null--40361]}, :args {:type {:kind :non-
	{:null, :type {:kind :list, :type {:kind :root, :type
	{::__InputValue}}}, :field-name :args, :qualified-field-name
	{::__Directive/args, :args nil, :type-name :__Directive, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}}, :category :object, :type-name
	{::__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR
	{::OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL],
	{::category :enum, :type-name :__TypeKind, :values-set #{:OBJECT
	{::INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}},
	{::User {:fields {:first_name {:type {:kind :root, :type :String},
	{::field-name :first_name, :qualified-field-name :User/first_name,
	{::args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :comments {:type {:kind
	{::list, :type {:kind :root, :type :thread}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :comments,
	{::qualified-field-name :User/comments, :args nil, :type-name
	{::User, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :is_active {:type
	{:{:kind :root, :type :Boolean}, :field-name :is_active,
	{::qualified-field-name :User/is_active, :args nil, :type-name
	{::User, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :created {:type {:kind
	{::root, :type :String}, :field-name :created, :qualified-field-
	{:name :User/created, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :subscriptions {:type
	{:{:kind :list, :type {:kind :root, :type :String}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :subscriptions,
	{::qualified-field-name :User/subscriptions, :args nil, :type-name
	{::User, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :status {:type {:kind
	{::root, :type :String}, :field-name :status, :qualified-field-
	{:name :User/status, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :id {:type {:kind :root,
	{::type :String}, :field-name :id, :qualified-field-name :User/id,
	{::args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :changed {:type {:kind
	{::root, :type :String}, :field-name :changed, :qualified-field-
	{:name :User/changed, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :last_name {:type {:kind
	{::root, :type :String}, :field-name :last_name, :qualified-field-
	{:name :User/last_name, :args nil, :type-name :User, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :posts {:type {:kind
	{::list, :type {:kind :root, :type :thread}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :posts,
	{::qualified-field-name :User/posts, :args nil, :type-name :User,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-list--40365]}}, :category :object, :type-name
	{::User, :implements #{}}, :thread {:fields {:id {:type {:kind
	{::root, :type :String}, :field-name :id, :qualified-field-name
	{::thread/id, :args nil, :type-name :thread}, :description {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :thread/description, :args nil, :type-name
	{::thread}, :votes {:type {:kind :root, :type :String}, :field-
	{:name :votes, :qualified-field-name :thread/votes, :args nil,
	{::type-name :thread}}, :category :interface, :type-name :thread,
	{::members #{:Post :Comment}}, :Float {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x6ae106b
	{:"clojure.spec.alpha$spec_impl$reify__39095@6ae106b"], :serialize
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x6ae106b
	{:"clojure.spec.alpha$spec_impl$reify__39095@6ae106b"], :category
	{::scalar, :type-name :Float}, :__DirectiveLocation {:values
	{:[:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION
	{::FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name
	{::__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD
	{::QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD
	{::SUBSCRIPTION}}, :Int {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x38816e93
	{:"clojure.spec.alpha$spec_impl$reify__39095@38816e93"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x787fc19 "clojure.spec.alpha$spec_impl$reify__39095@787fc19"],
	{::category :scalar, :type-name :Int}, :__InputValue {:fields
	{:{:name {:type {:kind :non-null, :type {:kind :root, :type
	{::String}}, :field-name :name, :qualified-field-name
	{::__InputValue/name, :args nil, :type-name :__InputValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__InputValue/description, :args nil, :type-name :__InputValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :type {:type {:kind :non-
	{:null, :type {:kind :root, :type :__Type}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :type,
	{::qualified-field-name :__InputValue/type, :args nil, :type-name
	{::__InputValue, :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :defaultValue {:type {:kind :root,
	{::type :String}, :field-name :defaultValue, :qualified-field-name
	{::__InputValue/defaultValue, :args nil, :type-name :__InputValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :__InputValue, :implements #{}}, :__Schema {:fields
	{:{:types {:type {:kind :non-null, :type {:kind :list, :type
	{:{:kind :root, :type :__Type}}}, :field-name :types, :qualified-
	{:field-name :__Schema/types, :args nil, :type-name :__Schema,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :queryType {:type {:kind :non-null,
	{::type {:kind :root, :type :__Type}}, :field-name :queryType,
	{::qualified-field-name :__Schema/queryType, :args nil, :type-name
	{::__Schema, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-non-null--40361]}, :mutationType {:type {:kind
	{::root, :type :__Type}, :field-name :mutationType, :qualified-
	{:field-name :__Schema/mutationType, :args nil, :type-name
	{::__Schema, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :subscriptionType
	{:{:type {:kind :root, :type :__Type}, :field-name
	{::subscriptionType, :qualified-field-name
	{::__Schema/subscriptionType, :args nil, :type-name :__Schema,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :directives {:type {:kind
	{::non-null, :type {:kind :list, :type {:kind :root, :type
	{::__Directive}}}, :field-name :directives, :qualified-field-name
	{::__Schema/directives, :args nil, :type-name :__Schema, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}}, :category :object, :type-name
	{::__Schema, :implements #{}}, :QueryRoot {:category :object,
	{::type-name :QueryRoot, :description "Root of all queries.",
	{::fields {:user {:type {:kind :non-null, :type {:kind :root,
	{::type :User}}, :args {:id {:type {:kind :root, :type :String},
	{::arg-name :id}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :user,
	{::qualified-field-name :QueryRoot/user, :type-name :QueryRoot,
	{::selector #function[com.walmartlabs.lacinia.schema/assemble-
	{:selector/select-non-null--40361]}, :top_posts {:type {:kind
	{::list, :type {:kind :root, :type :Post}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :top_posts,
	{::qualified-field-name :QueryRoot/top_posts, :args nil, :type-
	{:name :QueryRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-list--40365]}, :comments {:type {:kind :list, :type
	{:{:kind :root, :type :Comment}}, :args {:id {:type {:kind :root,
	{::type :String}, :arg-name :id}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :comments,
	{::qualified-field-name :QueryRoot/comments, :type-name
	{::QueryRoot, :selector #function[com.walmartlabs.lacinia.schema
	{:/assemble-selector/select-list--40365]}, :__type {:type {:kind
	{::root, :type :__Type}, :args {:name {:type {:kind :root, :type
	{::String}, :arg-name :name}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :__type,
	{::qualified-field-name :QueryRoot/__type, :type-name :QueryRoot,
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :__schema {:type
	{:{:kind :root, :type :__Schema}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :__schema,
	{::qualified-field-name :QueryRoot/__schema, :args nil, :type-name
	{::QueryRoot, :selector #function[com.walmartlabs.lacinia.schema
	{:/create-root-selector/select-require-single-value--40352]}},
	{::implements #{}}, :__EnumValue {:fields {:name {:type {:kind
	{::non-null, :type {:kind :root, :type :String}}, :field-name
	{::name, :qualified-field-name :__EnumValue/name, :args nil,
	{::type-name :__EnumValue, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :description {:type {:kind :root,
	{::type :String}, :field-name :description, :qualified-field-name
	{::__EnumValue/description, :args nil, :type-name :__EnumValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :isDeprecated {:type
	{:{:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-
	{:name :isDeprecated, :qualified-field-name
	{::__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-non-null--40361]}, :deprecationReason {:type {:kind
	{::root, :type :String}, :field-name :deprecationReason,
	{::qualified-field-name :__EnumValue/deprecationReason, :args nil,
	{::type-name :__EnumValue, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}}, :category :object,
	{::type-name :__EnumValue, :implements #{}}, :String {:parse
	{:#object[clojure.spec.alpha$spec_impl$reify__39095 0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"],
	{::serialize #object[clojure.spec.alpha$spec_impl$reify__39095
	{:0x2a1314d6
	{:"clojure.spec.alpha$spec_impl$reify__39095@2a1314d6"], :category
	{::scalar, :type-name :String}}, :com.walmartlabs.lacinia
	{:/container-type-name nil, :com.walmartlabs.lacinia/selection
	{:{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::selections ({:com.walmartlabs.lacinia.parser/arguments-
	{:extractor nil, :arguments nil, :reportable-arguments nil, :field
	{::id, :selection-type :field, :alias :id, :leaf? true, :query-
	{:path [:top_posts :id], :concrete-type? true, :field-definition
	{:{:type {:kind :root, :type :String}, :field-name :id,
	{::qualified-field-name :Post/id, :args nil, :type-name :Post,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :created, :selection-type :field, :alias :created,
	{::leaf? true, :query-path [:top_posts :created], :concrete-type?
	{:true, :field-definition {:type {:kind :root, :type :String},
	{::field-name :created, :qualified-field-name :Post/created, :args
	{:nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :changed, :selection-type :field, :alias :changed,
	{::leaf? true, :query-path [:top_posts :changed], :concrete-type?
	{:true, :field-definition {:type {:kind :root, :type :String},
	{::field-name :changed, :qualified-field-name :Post/changed, :args
	{:nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :title, :selection-type :field, :alias :title,
	{::leaf? true, :query-path [:top_posts :title], :concrete-type?
	{:true, :field-definition {:type {:kind :root, :type :String},
	{::field-name :title, :qualified-field-name :Post/title, :args
	{:nil, :type-name :Post, :resolve
	{:#function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :description, :selection-type :field, :alias
	{::description, :leaf? true, :query-path [:top_posts
	{::description], :concrete-type? true, :field-definition {:type
	{:{:kind :root, :type :String}, :field-name :description,
	{::qualified-field-name :Post/description, :args nil, :type-name
	{::Post, :resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil} {:com.walmartlabs.lacinia.parser
	{:/arguments-extractor nil, :arguments nil, :reportable-arguments
	{:nil, :field :url, :selection-type :field, :alias :url, :leaf?
	{:true, :query-path [:top_posts :url], :concrete-type? true,
	{::field-definition {:type {:kind :root, :type :String}, :field-
	{:name :url, :qualified-field-name :Post/url, :args nil, :type-
	{:name :Post, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :location {:line
	{:1, :column 10}, :directives nil}
	{:{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::arguments nil, :reportable-arguments nil, :field :posted_by,
	{::selection-type :field, :alias :posted_by, :leaf? true, :query-
	{:path [:top_posts :posted_by], :concrete-type? true, :field-
	{:definition {:type {:kind :root, :type :String}, :field-name
	{::posted_by, :qualified-field-name :Post/posted_by, :args nil,
	{::type-name :Post, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :location {:line
	{:1, :column 10}, :directives nil}
	{:{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::arguments nil, :reportable-arguments nil, :field :posted_in,
	{::selection-type :field, :alias :posted_in, :leaf? true, :query-
	{:path [:top_posts :posted_in], :concrete-type? true, :field-
	{:definition {:type {:kind :root, :type :String}, :field-name
	{::posted_in, :qualified-field-name :Post/posted_in, :args nil,
	{::type-name :Post, :resolve #function[clojure.lang.AFunction/1],
	{::selector #function[com.walmartlabs.lacinia.schema/create-root-
	{:selector/select-require-single-value--40352]}, :location {:line
	{:1, :column 10}, :directives nil}
	{:{:com.walmartlabs.lacinia.parser/arguments-extractor nil,
	{::arguments nil, :reportable-arguments nil, :field :votes,
	{::selection-type :field, :alias :votes, :leaf? true, :query-path
	{:[:top_posts :votes], :concrete-type? true, :field-definition
	{:{:type {:kind :root, :type :String}, :field-name :votes,
	{::qualified-field-name :Post/votes, :args nil, :type-name :Post,
	{::resolve #function[clojure.lang.AFunction/1], :selector
	{:#function[com.walmartlabs.lacinia.schema/create-root-selector
	{:/select-require-single-value--40352]}, :location {:line 1,
	{::column 10}, :directives nil}), :arguments nil, :reportable-
	{:arguments nil, :field :top_posts, :selection-type :field, :alias
	{::top_posts, :leaf? false, :query-path [:top_posts], :concrete-
	{:type? true, :field-definition {:type {:kind :list, :type {:kind
	{::root, :type :Post}}, :resolve
	{:#function[com.walmartlabs.lacinia.schema/wrap-resolver-to-
	{:ensure-resolver-result/fn--40334], :field-name :top_posts,
	{::qualified-field-name :QueryRoot/top_posts, :args nil, :type-
	{:name :QueryRoot, :selector
	{:#function[com.walmartlabs.lacinia.schema/assemble-selector
	{:/select-list--40365]}, :location {:line 1, :column 0},
	{::directives nil}}
Context 
{:cache #atom[{} 0x64f95fdb], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x3c426f7c "clojure.spec.alpha$spec_impl$reify__39095@3c426f7c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4fe3b931 "clojure.spec.alpha$spec_impl$reify__39095@4fe3b931"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x7d9e8cff "clojure.spec.alpha$spec_impl$reify__39095@7d9e8cff"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x7d9e8cff "clojure.spec.alpha$spec_impl$reify__39095@7d9e8cff"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x528825bf "clojure.spec.alpha$spec_impl$reify__39095@528825bf"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x7024ee "clojure.spec.alpha$spec_impl$reify__39095@7024ee"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x3c426f7c "clojure.spec.alpha$spec_impl$reify__39095@3c426f7c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4fe3b931 "clojure.spec.alpha$spec_impl$reify__39095@4fe3b931"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x7d9e8cff "clojure.spec.alpha$spec_impl$reify__39095@7d9e8cff"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x7d9e8cff "clojure.spec.alpha$spec_impl$reify__39095@7d9e8cff"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x528825bf "clojure.spec.alpha$spec_impl$reify__39095@528825bf"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x7024ee "clojure.spec.alpha$spec_impl$reify__39095@7024ee"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x541ce76a "clojure.spec.alpha$spec_impl$reify__39095@541ce76a"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0x31271346], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1dcc9153 "clojure.spec.alpha$spec_impl$reify__39095@1dcc9153"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x19e07db3 "clojure.spec.alpha$spec_impl$reify__39095@19e07db3"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6d23292d "clojure.spec.alpha$spec_impl$reify__39095@6d23292d"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6d23292d "clojure.spec.alpha$spec_impl$reify__39095@6d23292d"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x141c6bd3 "clojure.spec.alpha$spec_impl$reify__39095@141c6bd3"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0xe0b8106 "clojure.spec.alpha$spec_impl$reify__39095@e0b8106"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1dcc9153 "clojure.spec.alpha$spec_impl$reify__39095@1dcc9153"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x19e07db3 "clojure.spec.alpha$spec_impl$reify__39095@19e07db3"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6d23292d "clojure.spec.alpha$spec_impl$reify__39095@6d23292d"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6d23292d "clojure.spec.alpha$spec_impl$reify__39095@6d23292d"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x141c6bd3 "clojure.spec.alpha$spec_impl$reify__39095@141c6bd3"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0xe0b8106 "clojure.spec.alpha$spec_impl$reify__39095@e0b8106"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x85b25d3 "clojure.spec.alpha$spec_impl$reify__39095@85b25d3"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0xe43bf52], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x18ad0517 "clojure.spec.alpha$spec_impl$reify__39095@18ad0517"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4d5465ea "clojure.spec.alpha$spec_impl$reify__39095@4d5465ea"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1c29d275 "clojure.spec.alpha$spec_impl$reify__39095@1c29d275"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x723c8f2f "clojure.spec.alpha$spec_impl$reify__39095@723c8f2f"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x18ad0517 "clojure.spec.alpha$spec_impl$reify__39095@18ad0517"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4d5465ea "clojure.spec.alpha$spec_impl$reify__39095@4d5465ea"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1c29d275 "clojure.spec.alpha$spec_impl$reify__39095@1c29d275"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x723c8f2f "clojure.spec.alpha$spec_impl$reify__39095@723c8f2f"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0xb2139e0], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x18ad0517 "clojure.spec.alpha$spec_impl$reify__39095@18ad0517"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4d5465ea "clojure.spec.alpha$spec_impl$reify__39095@4d5465ea"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1c29d275 "clojure.spec.alpha$spec_impl$reify__39095@1c29d275"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x723c8f2f "clojure.spec.alpha$spec_impl$reify__39095@723c8f2f"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x18ad0517 "clojure.spec.alpha$spec_impl$reify__39095@18ad0517"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4d5465ea "clojure.spec.alpha$spec_impl$reify__39095@4d5465ea"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1c29d275 "clojure.spec.alpha$spec_impl$reify__39095@1c29d275"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x723c8f2f "clojure.spec.alpha$spec_impl$reify__39095@723c8f2f"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0x60405d77], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x18ad0517 "clojure.spec.alpha$spec_impl$reify__39095@18ad0517"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4d5465ea "clojure.spec.alpha$spec_impl$reify__39095@4d5465ea"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1c29d275 "clojure.spec.alpha$spec_impl$reify__39095@1c29d275"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x723c8f2f "clojure.spec.alpha$spec_impl$reify__39095@723c8f2f"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x18ad0517 "clojure.spec.alpha$spec_impl$reify__39095@18ad0517"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4d5465ea "clojure.spec.alpha$spec_impl$reify__39095@4d5465ea"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6cdcf744 "clojure.spec.alpha$spec_impl$reify__39095@6cdcf744"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x1c29d275 "clojure.spec.alpha$spec_impl$reify__39095@1c29d275"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x723c8f2f "clojure.spec.alpha$spec_impl$reify__39095@723c8f2f"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x197ba69c "clojure.spec.alpha$spec_impl$reify__39095@197ba69c"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0x7cd07a63], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x10cf8833 "clojure.spec.alpha$spec_impl$reify__39095@10cf8833"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x2594fad8 "clojure.spec.alpha$spec_impl$reify__39095@2594fad8"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6bce38a8 "clojure.spec.alpha$spec_impl$reify__39095@6bce38a8"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6bce38a8 "clojure.spec.alpha$spec_impl$reify__39095@6bce38a8"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x7acbbf2 "clojure.spec.alpha$spec_impl$reify__39095@7acbbf2"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x56cc3e5 "clojure.spec.alpha$spec_impl$reify__39095@56cc3e5"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x10cf8833 "clojure.spec.alpha$spec_impl$reify__39095@10cf8833"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x2594fad8 "clojure.spec.alpha$spec_impl$reify__39095@2594fad8"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6bce38a8 "clojure.spec.alpha$spec_impl$reify__39095@6bce38a8"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6bce38a8 "clojure.spec.alpha$spec_impl$reify__39095@6bce38a8"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x7acbbf2 "clojure.spec.alpha$spec_impl$reify__39095@7acbbf2"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x56cc3e5 "clojure.spec.alpha$spec_impl$reify__39095@56cc3e5"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x421f1f01 "clojure.spec.alpha$spec_impl$reify__39095@421f1f01"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0x5f63ce21], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0x438f882b], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0x11838a65], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
Context 
{:cache #atom[{} 0x47370866], :com.walmartlabs.lacinia.constants/parsed-query {:fragments {}, :selections [{:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}], :operation-type :query, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}}, :com.walmartlabs.lacinia.constants/schema {:ID {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :ID}, :Group {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Group/id, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Group/description, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Group/created, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Group/changed, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created_by {:type {:kind :root, :type :User}, :field-name :created_by, :qualified-field-name :Group/created_by, :args nil, :type-name :Group, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Group, :implements #{}}, :Post {:implements #{:thread}, :fields {:posted_in {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :title {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :url {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_by {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Post}, :Privilege {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Privilege/id, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :Privilege/first_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :Privilege/last_name, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :Privilege/is_active, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Privilege/created, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Privilege/changed, :args nil, :type-name :Privilege, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Privilege, :implements #{}}, :MutationRoot {:category :object, :type-name :MutationRoot, :description "Root of all mutations.", :fields {:createuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}, :email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :created {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :created}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :createuser, :qualified-field-name :MutationRoot/createuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :removeuser {:type {:kind :root, :type :User}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :removeuser, :qualified-field-name :MutationRoot/removeuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :updateuser {:type {:kind :root, :type :User}, :args {:email {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :email}, :first_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :first_name}, :last_name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :last_name}, :pass {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :pass}, :admin {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :admin}, :is_active {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :arg-name :is_active}, :changed {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :changed}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :updateuser, :qualified-field-name :MutationRoot/updateuser, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :upvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :upvote, :qualified-field-name :MutationRoot/upvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :downvote {:type {:kind :root, :type :Post}, :args {:id {:type {:kind :non-null, :type {:kind :root, :type :String}}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :downvote, :qualified-field-name :MutationRoot/downvote, :type-name :MutationRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :Comment {:implements #{:thread}, :fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Comment/id, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Comment/created, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Comment/changed, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Comment/description, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posted_to {:type {:kind :root, :type :Post}, :field-name :posted_to, :qualified-field-name :Comment/posted_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :replied_to {:type {:kind :root, :type :Comment}, :field-name :replied_to, :qualified-field-name :Comment/replied_to, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Comment/votes, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :commented_by {:type {:kind :root, :type :User}, :field-name :commented_by, :qualified-field-name :Comment/commented_by, :args nil, :type-name :Comment, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Comment}, :SubscriptionRoot {:category :object, :type-name :SubscriptionRoot, :description "Root of all subscriptions.", :fields {}, :implements #{}}, :Boolean {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4601ceb4 "clojure.spec.alpha$spec_impl$reify__39095@4601ceb4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x35127535 "clojure.spec.alpha$spec_impl$reify__39095@35127535"], :category :scalar, :type-name :Boolean}, :__Field {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Field/name, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Field/description, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Field/args, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__Field/type, :args nil, :type-name :__Field, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__Field/isDeprecated, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__Field/deprecationReason, :args nil, :type-name :__Field, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__Field, :implements #{}}, :__Type {:fields {:description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Type/description, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :interfaces {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :interfaces, :qualified-field-name :__Type/interfaces, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :ofType {:type {:kind :root, :type :__Type}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :ofType, :qualified-field-name :__Type/ofType, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :name {:type {:kind :root, :type :String}, :field-name :name, :qualified-field-name :__Type/name, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :fields {:type {:kind :list, :type {:kind :root, :type :__Field}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :fields, :qualified-field-name :__Type/fields, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :possibleTypes {:type {:kind :list, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :possibleTypes, :qualified-field-name :__Type/possibleTypes, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :kind {:type {:kind :non-null, :type {:kind :root, :type :__TypeKind}}, :field-name :kind, :qualified-field-name :__Type/kind, :args nil, :type-name :__Type, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :enumValues {:type {:kind :list, :type {:kind :root, :type :__EnumValue}}, :args {:includeDeprecated {:type {:kind :root, :type :Boolean}, :arg-name :includeDeprecated}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :enumValues, :qualified-field-name :__Type/enumValues, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :inputFields {:type {:kind :list, :type {:kind :root, :type :__InputValue}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :inputFields, :qualified-field-name :__Type/inputFields, :args nil, :type-name :__Type, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :__Type, :implements #{}}, :Subscription {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Subscription/id, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Subscription/created, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriber {:type {:kind :root, :type :User}, :field-name :subscriber, :qualified-field-name :Subscription/subscriber, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscribed_to {:type {:kind :root, :type :Group}, :field-name :subscribed_to, :qualified-field-name :Subscription/subscribed_to, :args nil, :type-name :Subscription, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :Subscription, :implements #{}}, :__Directive {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__Directive/name, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__Directive/description, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :locations {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__DirectiveLocation}}}, :field-name :locations, :qualified-field-name :__Directive/locations, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :args {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__InputValue}}}, :field-name :args, :qualified-field-name :__Directive/args, :args nil, :type-name :__Directive, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Directive, :implements #{}}, :__TypeKind {:values [:SCALAR :OBJECT :INTERFACE :UNION :ENUM :INPUT_OBJECT :LIST :NON_NULL], :category :enum, :type-name :__TypeKind, :values-set #{:OBJECT :INPUT_OBJECT :NON_NULL :SCALAR :INTERFACE :UNION :LIST :ENUM}}, :User {:fields {:first_name {:type {:kind :root, :type :String}, :field-name :first_name, :qualified-field-name :User/first_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :comments {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :User/comments, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :is_active {:type {:kind :root, :type :Boolean}, :field-name :is_active, :qualified-field-name :User/is_active, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :created {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :User/created, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptions {:type {:kind :list, :type {:kind :root, :type :String}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :subscriptions, :qualified-field-name :User/subscriptions, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :status {:type {:kind :root, :type :String}, :field-name :status, :qualified-field-name :User/status, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :User/id, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :changed {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :User/changed, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :last_name {:type {:kind :root, :type :String}, :field-name :last_name, :qualified-field-name :User/last_name, :args nil, :type-name :User, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :posts {:type {:kind :list, :type {:kind :root, :type :thread}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :posts, :qualified-field-name :User/posts, :args nil, :type-name :User, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}}, :category :object, :type-name :User, :implements #{}}, :thread {:fields {:id {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :thread/id, :args nil, :type-name :thread}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :thread/description, :args nil, :type-name :thread}, :votes {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :thread/votes, :args nil, :type-name :thread}}, :category :interface, :type-name :thread, :members #{:Post :Comment}}, :Float {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x4ccd1be7 "clojure.spec.alpha$spec_impl$reify__39095@4ccd1be7"], :category :scalar, :type-name :Float}, :__DirectiveLocation {:values [:QUERY :MUTATION :SUBSCRIPTION :FIELD :FRAGMENT_DEFINITION :FRAGMENT_SPREAD :INLINE_FRAGMENT], :category :enum, :type-name :__DirectiveLocation, :values-set #{:MUTATION :FRAGMENT_SPREAD :QUERY :INLINE_FRAGMENT :FRAGMENT_DEFINITION :FIELD :SUBSCRIPTION}}, :Int {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x47108a4 "clojure.spec.alpha$spec_impl$reify__39095@47108a4"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x226c7ec2 "clojure.spec.alpha$spec_impl$reify__39095@226c7ec2"], :category :scalar, :type-name :Int}, :__InputValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__InputValue/name, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__InputValue/description, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :type {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :type, :qualified-field-name :__InputValue/type, :args nil, :type-name :__InputValue, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :defaultValue {:type {:kind :root, :type :String}, :field-name :defaultValue, :qualified-field-name :__InputValue/defaultValue, :args nil, :type-name :__InputValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__InputValue, :implements #{}}, :__Schema {:fields {:types {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Type}}}, :field-name :types, :qualified-field-name :__Schema/types, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :queryType {:type {:kind :non-null, :type {:kind :root, :type :__Type}}, :field-name :queryType, :qualified-field-name :__Schema/queryType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :mutationType {:type {:kind :root, :type :__Type}, :field-name :mutationType, :qualified-field-name :__Schema/mutationType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :subscriptionType {:type {:kind :root, :type :__Type}, :field-name :subscriptionType, :qualified-field-name :__Schema/subscriptionType, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :directives {:type {:kind :non-null, :type {:kind :list, :type {:kind :root, :type :__Directive}}}, :field-name :directives, :qualified-field-name :__Schema/directives, :args nil, :type-name :__Schema, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}}, :category :object, :type-name :__Schema, :implements #{}}, :QueryRoot {:category :object, :type-name :QueryRoot, :description "Root of all queries.", :fields {:user {:type {:kind :non-null, :type {:kind :root, :type :User}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :user, :qualified-field-name :QueryRoot/user, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :top_posts {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :comments {:type {:kind :list, :type {:kind :root, :type :Comment}}, :args {:id {:type {:kind :root, :type :String}, :arg-name :id}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :comments, :qualified-field-name :QueryRoot/comments, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :__type {:type {:kind :root, :type :__Type}, :args {:name {:type {:kind :root, :type :String}, :arg-name :name}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__type, :qualified-field-name :QueryRoot/__type, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :__schema {:type {:kind :root, :type :__Schema}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :__schema, :qualified-field-name :QueryRoot/__schema, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :implements #{}}, :__EnumValue {:fields {:name {:type {:kind :non-null, :type {:kind :root, :type :String}}, :field-name :name, :qualified-field-name :__EnumValue/name, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :description {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :__EnumValue/description, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :isDeprecated {:type {:kind :non-null, :type {:kind :root, :type :Boolean}}, :field-name :isDeprecated, :qualified-field-name :__EnumValue/isDeprecated, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-non-null--40361]}, :deprecationReason {:type {:kind :root, :type :String}, :field-name :deprecationReason, :qualified-field-name :__EnumValue/deprecationReason, :args nil, :type-name :__EnumValue, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}}, :category :object, :type-name :__EnumValue, :implements #{}}, :String {:parse #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :serialize #object[clojure.spec.alpha$spec_impl$reify__39095 0x6e5d6258 "clojure.spec.alpha$spec_impl$reify__39095@6e5d6258"], :category :scalar, :type-name :String}}, :com.walmartlabs.lacinia/container-type-name nil, :com.walmartlabs.lacinia/selection {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :selections ({:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :id, :selection-type :field, :alias :id, :leaf? true, :query-path [:top_posts :id], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :id, :qualified-field-name :Post/id, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :created, :selection-type :field, :alias :created, :leaf? true, :query-path [:top_posts :created], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :created, :qualified-field-name :Post/created, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :changed, :selection-type :field, :alias :changed, :leaf? true, :query-path [:top_posts :changed], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :changed, :qualified-field-name :Post/changed, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :title, :selection-type :field, :alias :title, :leaf? true, :query-path [:top_posts :title], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :title, :qualified-field-name :Post/title, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :description, :selection-type :field, :alias :description, :leaf? true, :query-path [:top_posts :description], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :description, :qualified-field-name :Post/description, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :url, :selection-type :field, :alias :url, :leaf? true, :query-path [:top_posts :url], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :url, :qualified-field-name :Post/url, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_by, :selection-type :field, :alias :posted_by, :leaf? true, :query-path [:top_posts :posted_by], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_by, :qualified-field-name :Post/posted_by, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :posted_in, :selection-type :field, :alias :posted_in, :leaf? true, :query-path [:top_posts :posted_in], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :posted_in, :qualified-field-name :Post/posted_in, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil} {:com.walmartlabs.lacinia.parser/arguments-extractor nil, :arguments nil, :reportable-arguments nil, :field :votes, :selection-type :field, :alias :votes, :leaf? true, :query-path [:top_posts :votes], :concrete-type? true, :field-definition {:type {:kind :root, :type :String}, :field-name :votes, :qualified-field-name :Post/votes, :args nil, :type-name :Post, :resolve #function[clojure.lang.AFunction/1], :selector #function[com.walmartlabs.lacinia.schema/create-root-selector/select-require-single-value--40352]}, :location {:line 1, :column 10}, :directives nil}), :arguments nil, :reportable-arguments nil, :field :top_posts, :selection-type :field, :alias :top_posts, :leaf? false, :query-path [:top_posts], :concrete-type? true, :field-definition {:type {:kind :list, :type {:kind :root, :type :Post}}, :resolve #function[com.walmartlabs.lacinia.schema/wrap-resolver-to-ensure-resolver-result/fn--40334], :field-name :top_posts, :qualified-field-name :QueryRoot/top_posts, :args nil, :type-name :QueryRoot, :selector #function[com.walmartlabs.lacinia.schema/assemble-selector/select-list--40365]}, :location {:line 1, :column 0}, :directives nil}}
Arguments 

Value 
