
Request    : {:ssl-client-cert nil, :cookies {"JSESSIONID" {:value "BpyDWuHKs7t7yjHs24wN0zOf2pjk5IocSuLHfKVS"}}, :remote-addr "127.0.0.1", :params {:mutation "{post(url:\"Hello Reddit\",title:\"Hello fslkmfskm\",description:\"\"){id}}"}, :flash nil, :handler-type :undertow, :headers {"host" "0.0.0.0:3000", "user-agent" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36", "cookie" "JSESSIONID=BpyDWuHKs7t7yjHs24wN0zOf2pjk5IocSuLHfKVS", "referer" "http://0.0.0.0:3000/", "connection" "keep-alive", "pragma" "no-cache", "x-csrf-token" "QGWeeGVn8XDw2guWZfKZWwz5SfWxyh+OvTY3BWdLzYl76h5gIpnmdvJ7b6guOBkGzAuhDjiQzLQk2t0k", "accept" "application/json", "accept-language" "en-US,en;q=0.9,hi;q=0.8,ms;q=0.7,ta;q=0.6", "accept-encoding" "gzip, deflate", "dnt" "1", "cache-control" "no-cache"}, :server-port 3000, :content-length -1, :form-params {}, :server-exchange #object[io.undertow.server.HttpServerExchange 0x541d2a7b "HttpServerExchange{ GET /graphql request {Accept=[application/json], Accept-Language=[en-US,en;q=0.9,hi;q=0.8,ms;q=0.7,ta;q=0.6], Cache-Control=[no-cache], Accept-Encoding=[gzip, deflate], DNT=[1], Pragma=[no-cache], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36], Connection=[keep-alive], x-csrf-token=[QGWeeGVn8XDw2guWZfKZWwz5SfWxyh+OvTY3BWdLzYl76h5gIpnmdvJ7b6guOBkGzAuhDjiQzLQk2t0k], Cookie=[JSESSIONID=BpyDWuHKs7t7yjHs24wN0zOf2pjk5IocSuLHfKVS], Referer=[http://0.0.0.0:3000/], Host=[0.0.0.0:3000]} response {Server=[undertow]}}"], :query-params {"mutation" "{post(url:\"Hello Reddit\",title:\"Hello fslkmfskm\",description:\"\"){id}}"}, :content-type nil, :path-info "/graphql", :character-encoding nil, :context "", :uri "/graphql", :server-name "0.0.0.0", :query-string "mutation=%7Bpost(url%3A%22Hello%20Reddit%22%2Ctitle%3A%22Hello%20fslkmfskm%22%2Cdescription%3A%22%22)%7Bid%7D%7D", :body #object[io.undertow.io.UndertowInputStream 0x38d08589 "io.undertow.io.UndertowInputStream@38d08589"], :multipart-params {}, :scheme :http, :request-method :get, :session nil}
Variables  : {}
Query      : mutation {post(url:"Hello Reddit",title:"Hello fslkmfskm",description:""){id}}
Result     : {:data #ordered/map ([:post #ordered/map ([:id nil])])}